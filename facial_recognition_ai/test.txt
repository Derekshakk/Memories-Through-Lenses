(venv) (base) derekshakk@Dereks-MacBook-Pro-2 facial_recognition_ai % python3 main.py
1.2.3
0.1.0
Extracting user face encoding from video...
Traceback (most recent call last):
  File "/Users/derekshakk/PROJECTS/Memories-Through-Lenses/facial_recognition_ai/main.py", line 74, in <module>
    main()
  File "/Users/derekshakk/PROJECTS/Memories-Through-Lenses/facial_recognition_ai/main.py", line 62, in main
    user_face_encoding = get_user_face(video_path)
  File "/Users/derekshakk/PROJECTS/Memories-Through-Lenses/facial_recognition_ai/main.py", line 26, in get_user_face
    encodings = face_recognition.face_encodings(rgb_frame, face_locations)
  File "/Users/derekshakk/PROJECTS/Memories-Through-Lenses/facial_recognition_ai/venv/lib/python3.9/site-packages/face_recognition/api.py", line 214, in face_encodings
    return [np.array(face_encoder.compute_face_descriptor(face_image, raw_landmark_set, num_jitters)) for raw_landmark_set in raw_landmarks]
  File "/Users/derekshakk/PROJECTS/Memories-Through-Lenses/facial_recognition_ai/venv/lib/python3.9/site-packages/face_recognition/api.py", line 214, in <listcomp>
    return [np.array(face_encoder.compute_face_descriptor(face_image, raw_landmark_set, num_jitters)) for raw_landmark_set in raw_landmarks]
TypeError: compute_face_descriptor(): incompatible function arguments. The following argument types are supported:
    1. (self: _dlib_pybind11.face_recognition_model_v1, img: numpy.ndarray[(rows,cols,3),numpy.uint8], face: _dlib_pybind11.full_object_detection, num_jitters: int = 0, padding: float = 0.25) -> _dlib_pybind11.vector
    2. (self: _dlib_pybind11.face_recognition_model_v1, img: numpy.ndarray[(rows,cols,3),numpy.uint8], num_jitters: int = 0) -> _dlib_pybind11.vector
    3. (self: _dlib_pybind11.face_recognition_model_v1, img: numpy.ndarray[(rows,cols,3),numpy.uint8], faces: _dlib_pybind11.full_object_detections, num_jitters: int = 0, padding: float = 0.25) -> _dlib_pybind11.vectors
    4. (self: _dlib_pybind11.face_recognition_model_v1, batch_img: list[numpy.ndarray[(rows,cols,3),numpy.uint8]], batch_faces: list[_dlib_pybind11.full_object_detections], num_jitters: int = 0, padding: float = 0.25) -> _dlib_pybind11.vectorss
    5. (self: _dlib_pybind11.face_recognition_model_v1, batch_img: list[numpy.ndarray[(rows,cols,3),numpy.uint8]], num_jitters: int = 0) -> _dlib_pybind11.vectors

Invoked with: <_dlib_pybind11.face_recognition_model_v1 object at 0x1095cffb0>, array([[[188, 175, 136],
        [188, 175, 136],
        [188, 175, 136],
        ...,
        [203, 190, 162],
        [203, 190, 162],
        [203, 190, 162]],

       [[188, 175, 136],
        [188, 175, 136],
        [188, 175, 136],
        ...,
        [203, 190, 162],
        [203, 190, 162],
        [203, 190, 162]],

       [[188, 175, 136],
        [188, 175, 136],
        [188, 175, 136],
        ...,
        [203, 190, 162],
        [203, 190, 162],
        [203, 190, 162]],

       ...,

       [[187, 190, 210],
        [188, 192, 211],
        [189, 193, 212],
        ...,
        [197, 196, 193],
        [197, 196, 193],
        [197, 196, 193]],

       [[187, 190, 210],
        [188, 192, 211],
        [189, 193, 212],
        ...,
        [197, 196, 193],
        [197, 196, 193],
        [197, 196, 193]],

       [[187, 190, 210],
        [188, 192, 211],
        [189, 193, 212],
        ...,
        [197, 196, 193],
        [197, 196, 193],
        [197, 196, 193]]], dtype=uint8), <_dlib_pybind11.full_object_detection object at 0x109ef4db0>, 1
(venv) (base) derekshakk@Dereks-MacBook-Pro-2 facial_recognition_ai % 